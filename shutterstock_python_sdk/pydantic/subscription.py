# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from shutterstock_python_sdk.pydantic.allotment import Allotment
from shutterstock_python_sdk.pydantic.license_format import LicenseFormat
from shutterstock_python_sdk.pydantic.price import Price

class Subscription(BaseModel):
    # Unique internal identifier for the subscription
    id: str = Field(alias='id')

    # Description of the subscription
    description: typing.Optional[str] = Field(None, alias='description')

    allotment: typing.Optional[Allotment] = Field(None, alias='allotment')

    # Identifier for the type of assets associated with this subscription (images, videos, audio, editorial)
    asset_type: typing.Optional[str] = Field(None, alias='asset_type')

    # Date the subscription ends
    expiration_time: typing.Optional[datetime] = Field(None, alias='expiration_time')

    # List of formats that are licensable for the subscription
    formats: typing.Optional[typing.List[LicenseFormat]] = Field(None, alias='formats')

    # Internal identifier for the type of subscription
    license: typing.Optional[str] = Field(None, alias='license')

    # Subscription metadata; different for each customer
    metadata: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='metadata')

    price_per_download: typing.Optional[Price] = Field(None, alias='price_per_download')
    class Config:
        arbitrary_types_allowed = True
