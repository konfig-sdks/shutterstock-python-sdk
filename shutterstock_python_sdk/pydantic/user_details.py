# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from shutterstock_python_sdk.pydantic.user_details_premier_permissions import UserDetailsPremierPermissions

class UserDetails(BaseModel):
    # Unique internal identifier of the user, as a contributor
    contributor_id: typing.Optional[str] = Field(None, alias='contributor_id')

    # Unique internal identifier of the user, as a purchaser
    customer_id: typing.Optional[str] = Field(None, alias='customer_id')

    # Email address of the user
    email: typing.Optional[str] = Field(None, alias='email')

    # First name of the user
    first_name: typing.Optional[str] = Field(None, alias='first_name')

    # Full name including first, middle, and last name of the user
    full_name: typing.Optional[str] = Field(None, alias='full_name')

    # Unique internal identifier for the user, not tied to contributor or purchasing customer
    id: typing.Optional[str] = Field(None, alias='id')

    # True if the user has access to the Premier collection, false otherwise
    is_premier: typing.Optional[bool] = Field(None, alias='is_premier')

    # True if the user has access to the Premier collection and also has child users
    is_premier_parent: typing.Optional[bool] = Field(None, alias='is_premier_parent')

    # Main language of the user account
    language: typing.Optional[str] = Field(None, alias='language')

    # Last name of the user
    last_name: typing.Optional[str] = Field(None, alias='last_name')

    # True if the user has an enterprise license, false otherwise
    only_enhanced_license: typing.Optional[bool] = Field(None, alias='only_enhanced_license')

    # True if the user has access to sensitive use only, false otherwise
    only_sensitive_use: typing.Optional[bool] = Field(None, alias='only_sensitive_use')

    # Unique internal identifier for the user's organization, specific to Premier users
    organization_id: typing.Optional[str] = Field(None, alias='organization_id')

    premier_permissions: typing.Optional[UserDetailsPremierPermissions] = Field(None, alias='premier_permissions')

    # User name associated to the user
    username: typing.Optional[str] = Field(None, alias='username')
    class Config:
        arbitrary_types_allowed = True
