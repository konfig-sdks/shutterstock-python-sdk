# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from shutterstock_python_sdk.pydantic.contributor_profile_contributor_type import ContributorProfileContributorType
from shutterstock_python_sdk.pydantic.contributor_profile_equipment import ContributorProfileEquipment
from shutterstock_python_sdk.pydantic.contributor_profile_social_media import ContributorProfileSocialMedia
from shutterstock_python_sdk.pydantic.contributor_profile_styles import ContributorProfileStyles
from shutterstock_python_sdk.pydantic.contributor_profile_subjects import ContributorProfileSubjects

class ContributorProfile(BaseModel):
    # Contributor ID
    id: str = Field(alias='id')

    # Short description of the contributors' library
    about: typing.Optional[str] = Field(None, alias='about')

    contributor_type: typing.Optional[ContributorProfileContributorType] = Field(None, alias='contributor_type')

    # Preferred name to be displayed for the contributor
    display_name: typing.Optional[str] = Field(None, alias='display_name')

    equipment: typing.Optional[ContributorProfileEquipment] = Field(None, alias='equipment')

    # Country code representing the contributor's locale
    location: typing.Optional[str] = Field(None, alias='location')

    # Web URL for the contributors' profile
    portfolio_url: typing.Optional[str] = Field(None, alias='portfolio_url')

    social_media: typing.Optional[ContributorProfileSocialMedia] = Field(None, alias='social_media')

    styles: typing.Optional[ContributorProfileStyles] = Field(None, alias='styles')

    subjects: typing.Optional[ContributorProfileSubjects] = Field(None, alias='subjects')

    # Personal website for the contributor
    website: typing.Optional[str] = Field(None, alias='website')
    class Config:
        arbitrary_types_allowed = True
