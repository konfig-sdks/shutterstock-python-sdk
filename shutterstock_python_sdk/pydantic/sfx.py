# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from shutterstock_python_sdk.pydantic.contributor import Contributor
from shutterstock_python_sdk.pydantic.sfx_assets import SFXAssets
from shutterstock_python_sdk.pydantic.sfx_keywords import SFXKeywords
from shutterstock_python_sdk.pydantic.sfx_releases import SFXReleases

class SFX(BaseModel):
    contributor: Contributor = Field(alias='contributor')

    # Shutterstock ID of this sound effect
    id: str = Field(alias='id')

    # Media type of this track; should always be \"sfx\"
    media_type: str = Field(alias='media_type')

    # Title of this sound effect
    title: typing.Optional[str] = Field(None, alias='title')

    # Description of this sound effect
    description: typing.Optional[str] = Field(None, alias='description')

    # Date this sound effect was added to the Shutterstock library
    added_date: typing.Optional[date] = Field(None, alias='added_date')

    # Affiliate referral link; appears only for registered affiliate partners
    affiliate_url: typing.Optional[str] = Field(None, alias='affiliate_url')

    # Artist of the sound effect
    artist: typing.Optional[str] = Field(None, alias='artist')

    assets: typing.Optional[SFXAssets] = Field(None, alias='assets')

    # Duration of this sound effect in seconds
    duration: typing.Optional[typing.Union[int, float]] = Field(None, alias='duration')

    keywords: typing.Optional[SFXKeywords] = Field(None, alias='keywords')

    releases: typing.Optional[SFXReleases] = Field(None, alias='releases')

    # Time this sound effect was last updated
    updated_time: typing.Optional[datetime] = Field(None, alias='updated_time')

    url: typing.Optional[str] = Field(None, alias='url')
    class Config:
        arbitrary_types_allowed = True
