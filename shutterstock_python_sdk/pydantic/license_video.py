# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from shutterstock_python_sdk.pydantic.cookie import Cookie
from shutterstock_python_sdk.pydantic.license_request_metadata import LicenseRequestMetadata

class LicenseVideo(BaseModel):
    # ID of the video being licensed
    video_id: str = Field(alias='video_id')

    auth_cookie: typing.Optional[Cookie] = Field(None, alias='auth_cookie')

    # Whether or not this item is editorial content
    editorial_acknowledgement: typing.Optional[bool] = Field(None, alias='editorial_acknowledgement')

    metadata: typing.Optional[LicenseRequestMetadata] = Field(None, alias='metadata')

    # Retail price amount as a floating-point number in the transaction currency, such as 12.34; only for rev-share partners
    price: typing.Optional[typing.Union[int, float]] = Field(None, alias='price')

    # ID of the search that led to this licensing event
    search_id: typing.Optional[str] = Field(None, alias='search_id')

    # (Deprecated)
    show_modal: typing.Optional[bool] = Field(None, alias='show_modal')

    # Size of the video being licensed
    size: typing.Optional[Literal["web", "sd", "hd", "4k"]] = Field(None, alias='size')

    # ID of the subscription used for this license
    subscription_id: typing.Optional[str] = Field(None, alias='subscription_id')
    class Config:
        arbitrary_types_allowed = True
