# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from shutterstock_python_sdk.pydantic.image import Image
from shutterstock_python_sdk.pydantic.insights import Insights

class ImageSearchResults(BaseModel):
    # List of images
    data: typing.List[Image] = Field(alias='data')

    # Unique identifier for the search request
    search_id: str = Field(alias='search_id')

    # Total count of all results across all pages
    total_count: int = Field(alias='total_count')

    insights: typing.Optional[Insights] = Field(None, alias='insights')

    # Server-generated message, if any
    message: typing.Optional[str] = Field(None, alias='message')

    # Current page that is returned
    page: typing.Optional[int] = Field(None, alias='page')

    # Number of results per page
    per_page: typing.Optional[int] = Field(None, alias='per_page')

    # Returns information if search phrase has potentially been mistyped or another query would lead to better search results
    spellcheck_info: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='spellcheck_info')
    class Config:
        arbitrary_types_allowed = True
