# coding: utf-8

"""
    Shutterstock API Explorer

    The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.

    The version of the OpenAPI document: 1.1.32
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from shutterstock_python_sdk import schemas  # noqa: F401


class SFXAssets(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Files that are available as part of an sound effect asset
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def preview_mp3() -> typing.Type['SFXAssetDetails']:
                return SFXAssetDetails
        
            @staticmethod
            def waveform() -> typing.Type['SFXAssetDetails']:
                return SFXAssetDetails
            __annotations__ = {
                "preview_mp3": preview_mp3,
                "waveform": waveform,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preview_mp3"]) -> 'SFXAssetDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["waveform"]) -> 'SFXAssetDetails': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["preview_mp3", "waveform", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preview_mp3"]) -> typing.Union['SFXAssetDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["waveform"]) -> typing.Union['SFXAssetDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["preview_mp3", "waveform", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        preview_mp3: typing.Union['SFXAssetDetails', schemas.Unset] = schemas.unset,
        waveform: typing.Union['SFXAssetDetails', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SFXAssets':
        return super().__new__(
            cls,
            *args,
            preview_mp3=preview_mp3,
            waveform=waveform,
            _configuration=_configuration,
            **kwargs,
        )

from shutterstock_python_sdk.model.sfx_asset_details import SFXAssetDetails
